        {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "logic_app_name": {
                    "defaultValue": "aixs-vulnerability-reports",
                    "type": "String"
                },
                "keyvault_connection": {
                    "defaultValue": "/subscriptions/289e8341-6147-4fb6-897f-fa66a4919e8a/resourceGroups/rg-mlw-dev-weus/providers/Microsoft.Web/connections/keyvault-2",
                    "type": "String"
                },
                "office_365_connection": {
                    "defaultValue": "/subscriptions/289e8341-6147-4fb6-897f-fa66a4919e8a/resourceGroups/rg-mlw-dev-weus/providers/Microsoft.Web/connections/office365",
                    "type": "String"
                },
                "selected_repositories": {
                    "defaultValue": [
                        {
                            "imageDigest": "sha256:1e383b646aec3141c03dd15d18f292c324f894f9951c8682219fdc9ba4952203",
                            "registry": "acrpubmlwscicdweus.azurecr.io",
                            "repository": "bsi",
                            "scope": "subscriptions/1fb500bc-6cb9-4087-97f0-8cc28b82ae40/resourceGroups/rg-mlw-dev-weus/providers/Microsoft.ContainerRegistry/registries/acrpubmlwscicdweus"
                        }
                    ],
                    "type": "String"
                }
            },
            "variables": {},
            "resources": [
                {
                    "type": "Microsoft.Logic/workflows",
                    "apiVersion": "2017-07-01",
                    "name": "[parameters('logic_app_name')]",
                    "location": "westus2",
                    "tags": {
                        "ContactEmailAddress": "chand.basha@zeiss.com,abhinay.patel@zeiss.com"
                    },
                    "identity": {
                        "type": "SystemAssigned"
                    },
                    "properties": {
                        "state": "Enabled",
                        "definition": {
                            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "$connections": {
                                    "defaultValue": {},
                                    "type": "Object"
                                },
                                "errorMail": {
                                    "defaultValue": "julian.goeser.ext@zeiss.com",
                                    "type": "String"
                                },
                                "successMail": {
                                    "defaultValue": "julian.goeser.ext@zeiss.com",
                                    "type": "String"
                                },
                                "watchedImages": {
                                    "defaultValue": [
                                        {
                                            "imageDigest": "sha256:1e383b646aec3141c03dd15d18f292c324f894f9951c8682219fdc9ba4952203",
                                            "registry": "acrpubmlwscicdweus.azurecr.io",
                                            "repository": "bsi",
                                            "scope": "subscriptions/1fb500bc-6cb9-4087-97f0-8cc28b82ae40/resourceGroups/rg-mlw-dev-weus/providers/Microsoft.ContainerRegistry/registries/acrpubmlwscicdweus"
                                        }
                                    ],
                                    "type": "Array"
                                }
                            },
                            "triggers": {
                                "Recurrence": {
                                    "recurrence": {
                                        "frequency": "Week",
                                        "interval": 1,
                                        "startTime": "2022-11-08T09:00:00Z"
                                    },
                                    "evaluatedRecurrence": {
                                        "frequency": "Week",
                                        "interval": 1,
                                        "startTime": "2022-11-08T09:00:00Z"
                                    },
                                    "type": "Recurrence"
                                }
                            },
                            "actions": {
                                "For_each": {
                                    "foreach": "@parameters('watchedImages')",
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Create_HTML_table": {
                                                    "runAfter": {
                                                        "Set_numVulns": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table",
                                                    "inputs": {
                                                        "format": "HTML",
                                                        "from": "@variables('final')"
                                                    }
                                                },
                                                "Filter_on_container_registry": {
                                                    "runAfter": {
                                                        "Filter_on_image_digest": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('Filter_on_image_digest')",
                                                        "where": "@equals(item()?['properties']?['additionalData']?['registryHost'], body('Parse_watchedImages_param')?['registry'])"
                                                    }
                                                },
                                                "Filter_on_image_digest": {
                                                    "runAfter": {
                                                        "Filter_on_repository": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('Filter_on_repository')",
                                                        "where": "@not(endswith(item()?['properties']?['additionalData']?['imageDigest'], '\"sdfgsdfgsdfgsdfhjmfhjkawehgjgh\"'))"
                                                    },
                                                    "description": "Disabled, we get all assessments for all tags in the repo."
                                                },
                                                "Filter_on_repository": {
                                                    "runAfter": {
                                                        "Parse_JSON": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('Parse_JSON')?['value']",
                                                        "where": "@contains(item()?['properties']?['additionalData']?['repositoryName'], body('Parse_watchedImages_param')?['repository'])"
                                                    }
                                                },
                                                "Parse_JSON": {
                                                    "runAfter": {},
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP')",
                                                        "schema": {
                                                            "properties": {
                                                                "value": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "properties": {
                                                                                "properties": {
                                                                                    "additionalData": {
                                                                                        "properties": {
                                                                                            "assessedResourceType": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "cicdData": {
                                                                                                "properties": {
                                                                                                    "status": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "cve": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "link": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "title": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "title",
                                                                                                        "link"
                                                                                                    ],
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "cvss": {
                                                                                                "properties": {
                                                                                                    "2.0": {
                                                                                                        "properties": {
                                                                                                            "base": {
                                                                                                                "type": "number"
                                                                                                            },
                                                                                                            "cvssVectorString": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "3.0": {
                                                                                                        "properties": {
                                                                                                            "base": {
                                                                                                                "type": "number"
                                                                                                            },
                                                                                                            "cvssVectorString": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "imageDetails": {
                                                                                                "properties": {
                                                                                                    "os": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "osDetails": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "imageDigest": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "metadata": {
                                                                                                "properties": {
                                                                                                    "isPreview": {
                                                                                                        "type": "boolean"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "packageInformation": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "fixedVersion": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "installedVersion": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "name",
                                                                                                        "installedVersion",
                                                                                                        "fixedVersion"
                                                                                                    ],
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "patchable": {
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "publishedTime": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "registryHost": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "repositoryName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "scanner": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "vendorReferences": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "link": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "title": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "title",
                                                                                                        "link"
                                                                                                    ],
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "category": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "displayName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "impact": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "remediation": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "resourceDetails": {
                                                                                        "properties": {
                                                                                            "id": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "source": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "status": {
                                                                                        "properties": {
                                                                                            "code": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "severity": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "timeGenerated": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type",
                                                                            "id",
                                                                            "name",
                                                                            "properties"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Send_Vulnerability_Report": {
                                                    "runAfter": {
                                                        "Create_HTML_table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>@{variables('numVulns')} vulnerabilities found in the @{body('Parse_watchedImages_param')?['repository']} repository.<br>\n<br>\n<br>\n<br>\n@{body('Create_HTML_table')}</p>",
                                                            "Importance": "Normal",
                                                            "Subject": "AIXS vulnerability report for the   @{body('Parse_watchedImages_param')?['repository']} repository in @{body('Parse_watchedImages_param')?['registry']}",
                                                            "To": "@parameters('successMail')"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    }
                                                },
                                                "Set_final": {
                                                    "runAfter": {
                                                        "Set_relevant_fields_for_mail": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "final",
                                                        "value": "@reverse(sort(variables('sorted'),'Score'))"
                                                    }
                                                },
                                                "Set_numVulns": {
                                                    "runAfter": {
                                                        "Set_final": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "numVulns",
                                                        "value": "@length(variables('sorted'))"
                                                    }
                                                },
                                                "Set_relevant_fields_for_mail": {
                                                    "foreach": "@body('Filter_on_container_registry')",
                                                    "actions": {
                                                        "Select_relevant_fields": {
                                                            "runAfter": {},
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_on_image_digest')",
                                                                "select": {
                                                                    "Description": "@item()?['properties']?['displayName']",
                                                                    "Image": "@item()?['properties']?['additionalData']?['imageDigest']",
                                                                    "Patchable": "@{item()?['properties']?['additionalData']?['patchable']}",
                                                                    "Score": "@{if(not(equals(item()?['properties']?['additionalData']?['cvss']?['3.0']?['base'],null)),item()?['properties']?['additionalData']?['cvss']?['3.0']?['base'],-1)}",
                                                                    "Severity": "@item()?['properties']?['status']?['severity']"
                                                                }
                                                            }
                                                        },
                                                        "Store_selected_in_sorted": {
                                                            "runAfter": {
                                                                "Select_relevant_fields": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "sorted",
                                                                "value": "@body('Select_relevant_fields')"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Filter_on_container_registry": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Send_Error_Report": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "Body": "<p>Error fetching vulnerability assesment in &nbsp;@{body('Parse_watchedImages_param')?['registry']} for :@{body('Parse_watchedImages_param')?['repository']}@{body('Parse_watchedImages_param')?['imageDigest']}<br>\n<br>\n<br>\n@{outputs('HTTP')['statusCode']}<br>\n<br>\n@{body('HTTP')}</p>",
                                                                "Importance": "Normal",
                                                                "Subject": "AIXS vulnerability report error",
                                                                "To": "@parameters('errorMail')"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/v2/Mail"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@outputs('HTTP')['statusCode']",
                                                            200
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Get_clientID": {
                                            "runAfter": {
                                                "Get_clientSecret": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault_2']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('sec-logic-clientid')}/value"
                                            }
                                        },
                                        "Get_clientSecret": {
                                            "runAfter": {
                                                "Parse_watchedImages_param": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault_2']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('sec-log-secret')}/value"
                                            }
                                        },
                                        "HTTP": {
                                            "runAfter": {
                                                "Get_clientID": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.core.windows.net/",
                                                    "clientId": "@body('Get_clientID')?['value']",
                                                    "credentialType": "Secret",
                                                    "scope": "https://management.core.windows.net/.default",
                                                    "secret": "@body('Get_clientSecret')?['value']",
                                                    "tenant": "82913d90-8716-4025-a8e8-4f8dfa42b719",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "method": "GET",
                                                "uri": "https://management.azure.com/@{body('Parse_watchedImages_param')?['scope']}/providers/Microsoft.Security/assessments/dbd0cb49-b563-45e7-9724-889e799fa648/subAssessments?api-version=2019-01-01-preview"
                                            }
                                        },
                                        "Parse_watchedImages_param": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@item()",
                                                "schema": {
                                                    "properties": {
                                                        "imageDigest": {
                                                            "type": "string"
                                                        },
                                                        "registry": {
                                                            "type": "string"
                                                        },
                                                        "repository": {
                                                            "type": "string"
                                                        },
                                                        "scope": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Init_\"numVulns\"_int": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Init_\"final\"_array": {
                                    "runAfter": {
                                        "Init_\"highest\"_int": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "InitializeVariable",
                                    "inputs": {
                                        "variables": [
                                            {
                                                "name": "final",
                                                "type": "array"
                                            }
                                        ]
                                    }
                                },
                                "Init_\"highest\"_int": {
                                    "runAfter": {
                                        "Init_\"sorted\"_array": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "InitializeVariable",
                                    "inputs": {
                                        "variables": [
                                            {
                                                "name": "highest",
                                                "type": "integer",
                                                "value": 0
                                            }
                                        ]
                                    }
                                },
                                "Init_\"numVulns\"_int": {
                                    "runAfter": {
                                        "Init_\"final\"_array": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "InitializeVariable",
                                    "inputs": {
                                        "variables": [
                                            {
                                                "name": "numVulns",
                                                "type": "integer",
                                                "value": 0
                                            }
                                        ]
                                    }
                                },
                                "Init_\"sorted\"_array": {
                                    "runAfter": {},
                                    "type": "InitializeVariable",
                                    "inputs": {
                                        "variables": [
                                            {
                                                "name": "sorted",
                                                "type": "array",
                                                "value": []
                                            }
                                        ]
                                    }
                                }
                            },
                            "outputs": {}
                        },
                        "parameters": {
                            "$connections": {
                                "value": {
                                    "keyvault_2": {
                                        "connectionId": "[parameters('keyvault_connection')]",
                                        "connectionName": "keyvault-2",
                                        "connectionProperties": {
                                            "authentication": {
                                                "type": "ManagedServiceIdentity"
                                            }
                                        },
                                        "id": "/subscriptions/289e8341-6147-4fb6-897f-fa66a4919e8a/providers/Microsoft.Web/locations/westus2/managedApis/keyvault"
                                    },
                                    "office365": {
                                        "connectionId": "[parameters('office_365_connection')]",
                                        "connectionName": "office365",
                                        "id": "/subscriptions/289e8341-6147-4fb6-897f-fa66a4919e8a/providers/Microsoft.Web/locations/westus2/managedApis/office365"
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }