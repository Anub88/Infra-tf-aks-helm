# Job template for terraform plans.
parameters:
  - name: envShortCode
    type: string
    displayName: "Environment of the job (short code format: dev/qa/stage)"
    default: "dev"
  - name: subscriptionShortCode
    type: string
    displayName: "Short code for the azure Subscription stage"
    default: "dev"
  - name: stateFile
    type: string
    displayName: "The name of the state file to refer to"
  - name: workDir
    type: string
    displayName: "Working directory"
    default: "."
  - name: buildId
    type: string
    displayName: "ID of the build"
  - name: pathToTFCode
    type: string
    displayName: "Path to terraform code"
    default: "infrastructure/mlware"
  - name: buildAgentName
    type: string
    displayName: "Build Agent name"
  - name: stateDisplayName
    type: string
    displayName: "Clean name of state to display."
  - name: azureDevOpsEnvironment
    type: string
    displayName: "DevOps Environment "

jobs:
  - job: terraform_plan_${{ parameters.stateDisplayName }}
    pool:
      ${{ if eq(parameters.buildAgentName, 'ubuntu') }}:
        vmImage: "ubuntu-latest"
      ${{ else }}:
        name: HDP Image Analyzer Application Agent
        demands:
          - agent.name -equals ${{ parameters.buildAgentName }}
    displayName: Terraform Plan ${{ parameters.stateDisplayName }}-${{ parameters.envShortCode }}
    steps:
      - checkout: self
      - task: TerraformTaskV2@2
        displayName: Terraform Init
        inputs:
          provider: "azurerm"
          command: "init"
          workingDirectory: "${{ parameters.workDir }}/${{ parameters.pathToTFCode }}"
          backendServiceArm: "sp-iaa-${{ parameters.envShortCode }}-tf-serviceconnection"
          backendAzureRmResourceGroupName: "rg-backend-${{ parameters.envShortCode }}-weus-infra"
          ${{ if eq(parameters.envShortCode, 'dev') }}:
            backendAzureRmStorageAccountName: "stbackendtfdata"
          ${{ else}}:
            backendAzureRmStorageAccountName: "stbackendtfdata${{ parameters.envShortCode }}"
          backendAzureRmContainerName: "tf-state-container"
          backendAzureRmKey: "${{ parameters.stateFile }}"
      - task: TerraformTaskV2@2
        displayName: Terraform Plan
        inputs:
          provider: "azurerm"
          command: "plan"
          workingDirectory: "${{ parameters.workDir }}/${{ parameters.pathToTFCode }}"
          commandOptions: "-destroy -var environment=${{ parameters.envShortCode }} -var-file=vars/common.tfvars -var-file=vars/${{ parameters.envShortCode }}-mlw-weus.tfvars -out ${{ parameters.workDir }}/${{ parameters.pathToTFCode }}/${{ parameters.envShortCode }}-$(Build.BuildId).out"
          # QA and DEV use the same service connection since the SC is scoped by subscription.
          # Ideally they are also scoped to a resource group but because of the tight coupling they use the same.
          ? ${{ if or(eq(parameters.subscriptionShortCode, 'dev'), eq(parameters.subscriptionShortCode, 'qa')) }}
          : environmentServiceNameAzureRM: "sp-iaa-tf-serviceconnection"
          ${{ else }}:
            environmentServiceNameAzureRM: "sp-iaa-${{ parameters.subscriptionShortCode }}-tf-serviceconnection"
  - deployment: deploy_azure_resources
    pool:
      ${{ if eq(parameters.buildAgentName, 'ubuntu') }}:
        vmImage: "ubuntu-latest"
      ${{ else }}:
        name: HDP Image Analyzer Application Agent
        demands:
          - agent.name -equals ${{ parameters.buildAgentName }}
    displayName: deploy - ${{ parameters.envShortCode }} - ${{ replace(parameters.pathToTFCode, 'infrastructure/', '') }}
    environment: ${{ parameters.azureDevOpsEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
            # Enable execution permission on azurerm plugin
            - task: TerraformTaskV2@2
              displayName: Terraform Apply
              inputs:
                provider: "azurerm"
                command: "apply"
                workingDirectory: "${{ parameters.workDir }}/${{ parameters.pathToTFCode }}"
                commandOptions: "${{ parameters.workDir }}/${{ parameters.pathToTFCode }}/${{ parameters.envShortCode }}-$(Build.BuildId).out"
                ${{ if eq(parameters.subscriptionShortCode, 'dev') }}:
                  environmentServiceNameAzureRM: "sp-iaa-tf-serviceconnection"
                ${{ else}}:
                  environmentServiceNameAzureRM: "sp-iaa-${{ parameters.subscriptionShortCode }}-tf-serviceconnection"
              enabled: true
